// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "cockroachdb"
    url      = env("DATABASE_URL")
}

model Post {
    id        BigInt   @id @default(autoincrement())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    pictures  String[]
    message   String?

    author   User   @relation("posts", fields: [authorId], references: [id])
    authorId BigInt

    likedBy   User?   @relation("likedPosts", fields: [likedById], references: [id])
    likedById BigInt?

    dislikedBy   User?   @relation("dislikedPosts", fields: [dislikedById], references: [id])
    dislikedById BigInt?

    Comment Comment[]
}

model Comment {
    id        BigInt   @id @default(autoincrement())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    message   String

    User   User   @relation(fields: [userId], references: [id])
    userId BigInt

    Post   Post   @relation(fields: [postId], references: [id])
    postId BigInt
}

model Profile {
    id     BigInt @id @default(autoincrement())
    bio    String @default("")
    user   User   @relation(fields: [userId], references: [id])
    userId BigInt @unique
}

model Preferences {
    id            BigInt  @id @default(autoincrement())
    notifications Boolean @default(false)
    user          User    @relation(fields: [userId], references: [id])
    userId        BigInt  @unique
}

model User {
    id        BigInt   @id @default(autoincrement())
    createdAt DateTime @default(now())
    name      String   @unique
    email     String?  @default("")
    password  String
    isAdmin   Boolean  @default(false)

    posts         Post[] @relation("posts")
    likedPosts    Post[] @relation("likedPosts")
    dislikedPosts Post[] @relation("dislikedPosts")

    profile     Profile?
    preferences Preferences?
    Comment     Comment[]
}
